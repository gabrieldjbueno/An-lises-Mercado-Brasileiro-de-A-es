import yfinance as yf
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

# Baixar cota√ß√µes
tickers = {
    'A√ß√∫car Futuro': 'SB=F',
    'ETF CANE': 'CANE',
    'S√£o Martinho': 'SMTO3.SA'
}

data = yf.download(list(tickers.values()), start="2020-01-01")['Close']
data.columns = tickers.keys()
data = data.dropna()

# Calcular performance base 100
perf = data / data.iloc[0] * 100

# Plotar performance com valores finais na ponta
plt.figure(figsize=(12, 6))
for col in perf.columns:
    plt.plot(perf.index, perf[col], label=col)
    plt.text(perf.index[-1], perf[col].iloc[-1], f"{perf[col].iloc[-1]:.1f}", va='center')

plt.title("Performance Acumulada dos Ativos (base 100)")
plt.ylabel("√çndice Base 100")
plt.grid(True)
plt.legend(loc='upper left')
plt.figtext(0.5, -0.02, "Fonte: Yahoo Finance / Santa F√© Investimentos", ha="center", fontsize=9)
plt.tight_layout()
plt.show()

# Tracking Error = Desvio padr√£o da diferen√ßa de retornos
ret = data.pct_change().dropna()
tracking_error = (ret['ETF CANE'] - ret['A√ß√∫car Futuro']).std() * (252 ** 0.5)

print("\nüìä Tracking Error")
print(f"O Tracking Error anualizado do ETF CANE em rela√ß√£o ao contrato futuro de a√ß√∫car √© de {tracking_error:.2%}\n")

# Correla√ß√£o com heatmap
cor = ret.corr()

plt.figure(figsize=(6, 4))
sns.heatmap(cor, annot=True, cmap='coolwarm_r', vmin=-1, vmax=1)
plt.title("Matriz de Correla√ß√£o entre os Ativos")
plt.tight_layout()
plt.show()
